{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","data","isLoading","cityName","casedata","aqi","status","siteName","publishTime","cityBeChoosed","statusData","O3","PM10","PM25","CO","SO2","NO2","changeHandler","bind","clickHandler","fetchJsonp","then","res","json","reduce","acc","record","county","County","groupedRecords","push","setState","catch","e","console","log","this","target","value","caseData","map","AQI","Status","SiteName","PublishTime","key","statusdata","className","change","Object","keys","publish","click","React","Component","Title","onChange","id","city","StandardTable","City","statusBoxIndex","i","length","color","style","backgroundColor","keyValue","StatusBox","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+QAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,WAAW,EACXC,SAAU,qBACVC,SAAU,CACRC,IAAK,CAAC,KACNC,OAAQ,CAAC,oDACTC,SAAU,CAAC,gBACXC,YAAa,mBACbC,cAAe,IAEjBC,WAAY,CACVH,SAAU,eACVF,IAAK,IACLM,GAAI,KACJC,KAAM,KACNC,KAAM,IACNC,GAAI,OACJC,IAAK,MACLC,IAAK,MACLV,OAAQ,qDAGZ,EAAKW,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBA1BH,E,gEA4BE,IAAD,OAClBE,IACE,oEAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,IAAMtB,EAAOsB,EAAKC,QAAO,SAACC,EAAKC,GAC7B,IAAMC,EAASD,EAAOE,OAChBC,EAAiBJ,EAAIE,IAAW,GAGtC,OAFAE,EAAeC,KAAKJ,GACpBD,EAAIE,GAAUE,EACPJ,IACN,IACH,EAAKM,SAAS,CACZ9B,OACAC,WAAW,OAGd8B,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,QAASF,Q,oCAEzBA,GACZG,KAAKL,SAAS,CACZ5B,SAAU8B,EAAEI,OAAOC,QAErB,IACM7B,EADO2B,KAAKpC,MAAMC,KACGgC,EAAEI,OAAOC,OAC9BC,EAAW,CACflC,IAAKI,EAAc+B,KAAI,SAACF,GAAD,OAAWA,EAAMG,OACxCnC,OAAQG,EAAc+B,KAAI,SAACF,GAAD,OAAWA,EAAMI,UAC3CnC,SAAUE,EAAc+B,KAAI,SAACF,GAAD,OAAWA,EAAMK,YAC7CnC,YAAaC,EAAc,GAAGmC,YAC9BnC,cAAeA,GAGjB2B,KAAKL,SAAS,CACZ3B,SAAUmC,M,mCAGDM,GACX,IAAMpC,EAAgB2B,KAAKpC,MAAMI,SAASK,cACpCqC,EAAa,CACjBvC,SAAUE,EAAcoC,GAAKF,SAC7BtC,IAAKI,EAAcoC,GAAKJ,IACxB9B,GAAIF,EAAcoC,GAAKlC,GACvBC,KAAMH,EAAcoC,GAAKjC,KACzBC,KAAMJ,EAAcoC,GAAK,SACzB/B,GAAIL,EAAcoC,GAAK/B,GACvBC,IAAKN,EAAcoC,GAAK9B,IACxBC,IAAKP,EAAcoC,GAAK7B,IACxBV,OAAQG,EAAcoC,GAAKH,QAE7BN,KAAKL,SAAS,CACZrB,WAAYoC,M,+BAId,OACE,6BACE,yBAAKC,UAAU,aACb,kBAAC,EAAD,CACEC,OAAQZ,KAAKnB,cACbd,SAAU8C,OAAOC,KAAKd,KAAKpC,MAAMC,QAEnC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEE,SAAUiC,KAAKpC,MAAMG,SACrBgD,QAASf,KAAKpC,MAAMI,SAASI,cAE/B,kBAAC,EAAD,CACEE,WAAY0B,KAAKpC,MAAMU,WACvB6B,SAAUH,KAAKpC,MAAMI,SACrBgD,MAAOhB,KAAKjB,gBAGhB,yBAAK4B,UAAU,UACb,yBAAKA,UAAU,WAAf,kFACA,yBAAKA,UAAU,aAAf,6D,GAzGuBM,IAAMC,WAkHjCC,E,kDACJ,WAAYxD,GAAQ,uCACZA,G,qDAGN,OACE,yBAAKgD,UAAU,YACb,yBAAKA,UAAU,SAAf,wCACA,4BACES,SAAUpB,KAAKrC,MAAMiD,OACrBV,MAAM,GACNS,UAAU,WACVU,GAAG,YAEH,4BAAQnB,MAAM,IAAd,kCACCF,KAAKrC,MAAMI,SAASqC,KAAI,SAACkB,GAAD,OACvB,4BAAQb,IAAKa,EAAMpB,MAAOoB,GACvBA,Y,GAjBKL,IAAMC,WA0BpBK,E,uKAEF,OACE,yBAAKZ,UAAU,oBACb,2BAAOA,UAAU,iBACf,+BACE,4BACE,oCACA,sCACA,uCACA,uCACA,uCACA,yCAGJ,+BACE,4BACE,4BACE,8CAEF,4BACE,8CAEF,4BACE,kFAEF,4BACE,kFAEF,4BACE,gEAEF,4BACE,sD,GAjCYM,IAAMC,WA2C5BM,E,kDACJ,WAAY7D,GAAQ,uCACZA,G,qDAGN,OACE,yBAAKgD,UAAU,WACb,yBAAKA,UAAU,YAAYX,KAAKrC,MAAMI,UACtC,yBAAK4C,UAAU,SACf,yBAAKA,UAAU,UAAUX,KAAKrC,MAAMoD,QAApC,sB,GATWE,IAAMC,WAenBZ,E,kDACJ,WAAY3C,GAAQ,uCACZA,G,qDAMN,IAJQ,IAAD,OACCwC,EAAaH,KAAKrC,MAAlBwC,SACA7B,EAAe0B,KAAKrC,MAApBW,WACJmD,EAAiB,GACZC,EAAI,EAAGA,EAAIvB,EAAShC,SAASwD,OAAQD,IAC5CD,EAAe/B,KAAKgC,GAEtB,IAAIE,EAAQ,GACZ,OAAQtD,EAAWJ,QACjB,IAAK,eACH0D,EAAQ,UACR,MACF,IAAK,eACHA,EAAQ,UACR,MACF,IAAK,mDACHA,EAAQ,UACR,MACF,IAAK,mDACHA,EAAQ,UACR,MACF,IAAK,iCACHA,EAAQ,UACR,MACF,IAAK,eACHA,EAAQ,UAKZ,OACE,yBAAKjB,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QAAQrC,EAAWH,UAClC,yBAAKwC,UAAU,MAAMkB,MAAO,CAAEC,gBAAiBF,IAC5CtD,EAAWL,MAGhB,yBAAK0C,UAAU,MACb,yBAAKA,UAAU,WAAf,gBACA,yBAAKA,UAAU,WAAf,IACG,oCADH,SAGA,yBAAKA,UAAU,SAASrC,EAAWC,KAErC,yBAAKoC,UAAU,QACb,yBAAKA,UAAU,WAAf,4BACA,yBAAKA,UAAU,WAAf,KACI,qCADJ,mBAGA,yBAAKA,UAAU,SAASrC,EAAWE,OAErC,yBAAKmC,UAAU,QACb,yBAAKA,UAAU,WAAf,kCACA,yBAAKA,UAAU,WAAf,KACI,sCADJ,mBAGA,yBAAKA,UAAU,SAASrC,EAAWG,OAErC,yBAAKkC,UAAU,MACb,yBAAKA,UAAU,WAAf,4BACA,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,SAASrC,EAAWI,KAGrC,yBAAKiC,UAAU,OACb,yBAAKA,UAAU,WAAf,4BACA,yBAAKA,UAAU,WAAf,KACI,oCADJ,SAGA,yBAAKA,UAAU,SAASrC,EAAWK,MAErC,yBAAKgC,UAAU,OACb,yBAAKA,UAAU,WAAf,4BACA,yBAAKA,UAAU,WAAf,KACI,oCADJ,SAGA,yBAAKA,UAAU,SAASrC,EAAWM,OAGvC,yBAAK+B,UAAU,iBACZc,EAAerB,KAAI,SAACF,GAAD,OAClB,kBAAC,EAAD,CACEO,IAAKP,EACL/B,SAAUgC,EAAShC,SAAS+B,GAC5BjC,IAAKkC,EAASlC,IAAIiC,GAClBhC,OAAQiC,EAASjC,OAAOgC,GACxB6B,SAAU7B,EACVc,MAAO,EAAKrD,MAAMqD,iB,GA7FXC,IAAMC,WAsGrBc,E,kDACJ,WAAYrE,GAAQ,uCACZA,G,qDAEE,IAAD,OACHiE,EAAQ,GACZ,OAAQ5B,KAAKrC,MAAMO,QACjB,IAAK,eACH0D,EAAQ,UACR,MACF,IAAK,eACHA,EAAQ,UACR,MACF,IAAK,mDACHA,EAAQ,UACR,MACF,IAAK,mDACHA,EAAQ,UACR,MACF,IAAK,iCACHA,EAAQ,UACR,MACF,IAAK,eACHA,EAAQ,UAKZ,OACE,yBACEjB,UAAU,OACVsB,QAAS,SAACpC,GACR,EAAKlC,MAAMqD,MAAM,EAAKrD,MAAMoE,YAG9B,yBAAKpB,UAAU,OAAOT,MAAOF,KAAKrC,MAAMQ,UACrC6B,KAAKrC,MAAMQ,UAEd,yBAAKwC,UAAU,MAAMkB,MAAO,CAAEC,gBAAiBF,IAC5C5B,KAAKrC,MAAMM,U,GAvCEgD,IAAMC,WCrSVgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEdpD,OAAM,SAAAqD,GACLnD,QAAQmD,MAAMA,EAAMC,a","file":"static/js/main.c3e5e0dc.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport fetchJsonp from \"fetch-jsonp\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isLoading: true,\n      cityName: \"高雄市\",\n      casedata: {\n        aqi: [156],\n        status: [\"對所有族群不健康\"],\n        siteName: [\"前金\"],\n        publishTime: \"1970-01-01 00:00\",\n        cityBeChoosed: \"\",\n      },\n      statusData: {\n        siteName: \"前金\",\n        aqi: 156,\n        O3: \"28\",\n        PM10: \"13\",\n        PM25: \"6\",\n        CO: \"0.24\",\n        SO2: \"1.6\",\n        NO2: \"4.7\",\n        status: \"對所有族群不健康\",\n      },\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n  componentDidMount() {\n    fetchJsonp(\n      \"https://json2jsonp.com/?url=http://opendata2.epa.gov.tw/AQI.json\"\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        const data = json.reduce((acc, record) => {\n          const county = record.County;\n          const groupedRecords = acc[county] || [];\n          groupedRecords.push(record);\n          acc[county] = groupedRecords;\n          return acc;\n        }, {});\n        this.setState({\n          data,\n          isLoading: false,\n        });\n      })\n      .catch((e) => console.log(\"catch\", e));\n  }\n  changeHandler(e) {\n    this.setState({\n      cityName: e.target.value,\n    });\n    const data = this.state.data;\n    const cityBeChoosed = data[e.target.value];\n    const caseData = {\n      aqi: cityBeChoosed.map((value) => value.AQI),\n      status: cityBeChoosed.map((value) => value.Status),\n      siteName: cityBeChoosed.map((value) => value.SiteName),\n      publishTime: cityBeChoosed[0].PublishTime,\n      cityBeChoosed: cityBeChoosed,\n    };\n\n    this.setState({\n      casedata: caseData,\n    });\n  }\n  clickHandler(key) {\n    const cityBeChoosed = this.state.casedata.cityBeChoosed;\n    const statusdata = {\n      siteName: cityBeChoosed[key].SiteName,\n      aqi: cityBeChoosed[key].AQI,\n      O3: cityBeChoosed[key].O3,\n      PM10: cityBeChoosed[key].PM10,\n      PM25: cityBeChoosed[key][\"PM2.5\"],\n      CO: cityBeChoosed[key].CO,\n      SO2: cityBeChoosed[key].SO2,\n      NO2: cityBeChoosed[key].NO2,\n      status: cityBeChoosed[key].Status,\n    };\n    this.setState({\n      statusData: statusdata,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <Title\n            change={this.changeHandler}\n            cityName={Object.keys(this.state.data)}\n          />\n          <StandardTable />\n          <City\n            cityName={this.state.cityName}\n            publish={this.state.casedata.publishTime}\n          />\n          <Status\n            statusData={this.state.statusData}\n            caseData={this.state.casedata}\n            click={this.clickHandler}\n          />\n        </div>\n        <div className=\"footer\">\n          <div className=\"datasrc\">資料來源：行政院環境保護署</div>\n          <div className=\"copyright\">\n            Copyright © 2019 HexSchool. All rights reserved.\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"titleBox\">\n        <div className=\"title\">空氣品質指標</div>\n        <select\n          onChange={this.props.change}\n          value=\"\"\n          className=\"location\"\n          id=\"location\"\n        >\n          <option value=\"\">請選擇地區</option>\n          {this.props.cityName.map((city) => (\n            <option key={city} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nclass StandardTable extends React.Component {\n  render() {\n    return (\n      <div className=\"standardTableBox\">\n        <table className=\"standardTable\">\n          <thead>\n            <tr>\n              <th>0~50</th>\n              <th>51~100</th>\n              <th>101~150</th>\n              <th>151~200</th>\n              <th>201~300</th>\n              <th>301~400</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <div>良好</div>\n              </td>\n              <td>\n                <div>普通</div>\n              </td>\n              <td>\n                <div>對敏感族群不健康</div>\n              </td>\n              <td>\n                <div>對所有族群不健康</div>\n              </td>\n              <td>\n                <div>非常不健康</div>\n              </td>\n              <td>\n                <div>危害</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass City extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"cityBox\">\n        <div className=\"cityName\">{this.props.cityName}</div>\n        <div className=\"line\" />\n        <div className=\"update\">{this.props.publish} 更新</div>\n      </div>\n    );\n  }\n}\n\nclass Status extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { caseData } = this.props;\n    const { statusData } = this.props;\n    let statusBoxIndex = [];\n    for (let i = 0; i < caseData.siteName.length; i++) {\n      statusBoxIndex.push(i);\n    }\n    let color = \"\";\n    switch (statusData.status) {\n      case \"良好\":\n        color = \"#95F084\";\n        break;\n      case \"普通\":\n        color = \"#FFE695\";\n        break;\n      case \"對敏感族群不健康\":\n        color = \"#FFAF6A\";\n        break;\n      case \"對所有族群不健康\":\n        color = \"#FF5757\";\n        break;\n      case \"非常不健康\":\n        color = \"#9777FF\";\n        break;\n      case \"危害\":\n        color = \"#AD1774\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <div className=\"status\">\n        <div className=\"box\">\n          <div className=\"chooseBox\">\n            <div className=\"name\">{statusData.siteName}</div>\n            <div className=\"num\" style={{ backgroundColor: color }}>\n              {statusData.aqi}\n            </div>\n          </div>\n          <div className=\"o3\">\n            <div className=\"chinese\">臭氧</div>\n            <div className=\"english\">\n              O<small>2</small>(ppb)\n            </div>\n            <div className=\"value\">{statusData.O3}</div>\n          </div>\n          <div className=\"pm10\">\n            <div className=\"chinese\">懸浮微粒</div>\n            <div className=\"english\">\n              PM<small>10</small>(μg/m³)\n            </div>\n            <div className=\"value\">{statusData.PM10}</div>\n          </div>\n          <div className=\"pm25\">\n            <div className=\"chinese\">細懸浮微粒</div>\n            <div className=\"english\">\n              PM<small>2.5</small>(μg/m³)\n            </div>\n            <div className=\"value\">{statusData.PM25}</div>\n          </div>\n          <div className=\"co\">\n            <div className=\"chinese\">一氧化碳</div>\n            <div className=\"english\">CO(ppm)</div>\n            <div className=\"value\">{statusData.CO}</div>\n          </div>\n\n          <div className=\"so2\">\n            <div className=\"chinese\">二氧化硫</div>\n            <div className=\"english\">\n              SO<small>2</small>(ppb)\n            </div>\n            <div className=\"value\">{statusData.SO2}</div>\n          </div>\n          <div className=\"no2\">\n            <div className=\"chinese\">二氧化氮</div>\n            <div className=\"english\">\n              NO<small>2</small>(ppb)\n            </div>\n            <div className=\"value\">{statusData.NO2}</div>\n          </div>\n        </div>\n        <div className=\"caseContainer\">\n          {statusBoxIndex.map((value) => (\n            <StatusBox\n              key={value}\n              siteName={caseData.siteName[value]}\n              aqi={caseData.aqi[value]}\n              status={caseData.status[value]}\n              keyValue={value}\n              click={this.props.click}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass StatusBox extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let color = \"\";\n    switch (this.props.status) {\n      case \"良好\":\n        color = \"#95F084\";\n        break;\n      case \"普通\":\n        color = \"#FFE695\";\n        break;\n      case \"對敏感族群不健康\":\n        color = \"#FFAF6A\";\n        break;\n      case \"對所有族群不健康\":\n        color = \"#FF5757\";\n        break;\n      case \"非常不健康\":\n        color = \"#9777FF\";\n        break;\n      case \"危害\":\n        color = \"#AD1774\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <div\n        className=\"case\"\n        onClick={(e) => {\n          this.props.click(this.props.keyValue);\n        }}\n      >\n        <div className=\"name\" value={this.props.siteName}>\n          {this.props.siteName}\n        </div>\n        <div className=\"num\" style={{ backgroundColor: color }}>\n          {this.props.aqi}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}